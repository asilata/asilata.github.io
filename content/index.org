#+title: Home
#+author: Asilata Bapat

#+begin_intro
#+attr_html: :id mypicture :alt Asilata Bapat
[[file:assets/asilata-bapat.jpg]]

#+begin_nil
Senior Lecturer & ARC DECRA Fellow\\
[[http://maths.anu.edu.au/][Mathematical Sciences Institute]]\\
The Australian National University\\
Canberra, ACT, 2601, Australia

**Email:** ~asilata.bapat~ at ~anu~ dot ~edu~ dot ~au~\\
**Office:** 4.84 [[http://www.anu.edu.au/maps#show=102872][Hanna Neumann Building #145]]\\
**Phone:** +61 2 6125 7320
#+end_nil
#+end_intro

** Research interests and background
I am interested in the topology, geometry, and combinatorics of spaces and categories that arise from representation theory.
I currently think about Bridgeland stability conditions on triangulated categories and categorical braid group actions. 
Other topics of interest include perverse sheaves, hyperplane arrangements, and Bernstein--Sato polynomials.

My papers and preprints are on my [[file:research.org][research page]].
A CV is available [[file:cv.html][here (html)]] and [[file:cv/cv.pdf][here (pdf)]].

** Current and upcoming activities
My professional activities include [[file:research.org][doing research]] and [[file:activities.org][presenting research work]], [[file:teaching.org][teaching classes]], and [[file:supervision.org][supervising students]].

#+begin_src emacs-lisp :results value raw :exports results
(string-join (org-map-entries (lambda () (concat "*** " (org-get-heading) "\n" (org-get-entry))) "current+LEVEL=2-status=\"past\"" '("data.org")) "\n")
#+end_src

#+begin_src emacs-lisp :results silent :exports results
  (defun pp-activity ()
    "Pretty-print the current activity item. This function is called when mapping over entries in the data.org file."
    (let ((title (org-entry-get nil "ITEM"))
          (scheduled (encode-time (org-parse-time-string (org-entry-get nil "SCHEDULED"))))
          (display-date (org-entry-get nil "display-date"))
          (with (org-entry-get nil "with"))
          (location (org-entry-get nil "location"))
          (links (org-entry-get nil "link"))
          (comment (org-entry-get nil "comment")))
      (format "- *%s*: %s%s%s%s%s"
              (if display-date display-date
                (org-format-time-string "%b %Y" scheduled))
              title
              (if location (concat ", " location) "")
              (if with (concat ", with " with) "")
              (if comment (format " (%s)" comment) "")
              (if links (format " (%s)" links) ""))
              ))
#+end_src

#+begin_src emacs-lisp :results value raw :exports results :session
    (let ((current-events (string-join
     (reverse
      (org-map-entries
      'pp-activity
      "activity+LEVEL=2+SCHEDULED>=\"<now>\""
      '("data.org")))
     "\n")))
      (if (string= "" current-events) ""
        (concat "*** Travel/presentations\n" current-events)))
#+end_src


